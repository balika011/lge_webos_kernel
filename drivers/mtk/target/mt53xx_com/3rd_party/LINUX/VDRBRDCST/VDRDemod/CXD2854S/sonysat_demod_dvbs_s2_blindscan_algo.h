/*------------------------------------------------------------------------------
  Copyright 2013 Sony Corporation

  Last Updated  : $Date: 2015/02/15 $
  File Revision : $Revision: #1 $
------------------------------------------------------------------------------*/
/**
 @file    sonysat_demod_dvbs_s2_blindscan_algo.h

          This file provides the algorithms for BlindScan/TuneSRS function.
*/
/*----------------------------------------------------------------------------*/
#ifndef SONYSAT_DEMOD_DVBS_S2_BLINDSCAN_ALGO_H
#define SONYSAT_DEMOD_DVBS_S2_BLINDSCAN_ALGO_H

#include "sonysat_common.h"
#include "sonysat_demod_dvbs_s2_blindscan_data.h"

/*----------------------------------------------------------------------------
  Functions
----------------------------------------------------------------------------*/
/**
 @brief Get candidate from power spectrum for multipath.

 @param pStorage Storage instance.
 @param pPowerList Power spectrum data.
 @param clipStep Slicing step in dB x 100.
 @param minSymbolRateKSps Min symbol rate in KSps.
 @param maxSymbolRateKSps Max symbol rate in KSps.
 @param cferr Error frequency in KHz.
 @param pCandList Candidate list generated by this function.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_GetCandidateMp (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                sonysat_demod_dvbs_s2_blindscan_power_t * pPowerList,
                                                                uint32_t clipStep,
                                                                uint32_t minSymbolRateKSps,
                                                                uint32_t maxSymbolRateKSps,
                                                                uint32_t cferr,
                                                                sonysat_demod_dvbs_s2_blindscan_data_t * pCandList);

/**
 @brief Get candidate from power spectrum.

 @param pStorage Storage instance.
 @param pPowerList Power spectrum data.
 @param clipStep Slicing step in dB x 100.
 @param minSymbolRateKSps Min symbol rate in KSps.
 @param maxSymbolRateKSps Max symbol rate in KSps.
 @param cferr Error frequency in KHz.
 @param pCandList Candidate list generated by this function.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_GetCandidateNml (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                 sonysat_demod_dvbs_s2_blindscan_power_t * pPowerList,
                                                                 uint32_t clipStep,
                                                                 uint32_t minSymbolRateKSps,
                                                                 uint32_t maxSymbolRateKSps,
                                                                 uint32_t cferr,
                                                                 sonysat_demod_dvbs_s2_blindscan_data_t * pCandList);

/**
 @brief Separate candidate for low symbol rate search

        pCandList is updated by this function.

 @param pStorage Storage instance.
 @param pCandList Candidate list.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_SeparateCandidate (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                   sonysat_demod_dvbs_s2_blindscan_data_t * pCandList);

/**
 @brief Reduce candidate which is out of range.

        pCandList is updated by this function.

 @param pStorage Storage instance.
 @param pCandList Candidate list.
 @param pChannelList Detected channel list.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_ReduceCandidate (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                 sonysat_demod_dvbs_s2_blindscan_data_t * pCandList,
                                                                 sonysat_demod_dvbs_s2_blindscan_data_t * pChannelList);

/**
 @brief Delete duplicated candidate

        pCandList is updated by this function.

 @param pStorage Storage instance.
 @param pCandList Candidate list.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_DeleteDuplicate (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                 sonysat_demod_dvbs_s2_blindscan_data_t * pCandList);

/**
 @brief Delete duplicated candidate

        pCandList is updated by this function.

 @param pStorage Storage instance.
 @param pCandList Candidate list.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_DeleteDuplicate2 (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                  sonysat_demod_dvbs_s2_blindscan_data_t * pCandList);

/**
 @brief Get non detected area from detected channel list.

 @param pStorage Storage instance.
 @param minPowerFreqKHz Min frequency in KHz.
 @param maxPowerFreqKHz Max frequency in KHz.
 @param resolutionKHz Resolution in KHz.
 @param pChannelList Detected channel list.
 @param pBandList Not detected area list.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_GetNonDetectedBand (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                    uint32_t minPowerFreqKHz,
                                                                    uint32_t maxPowerFreqKHz,
                                                                    uint32_t resolutionKHz,
                                                                    sonysat_demod_dvbs_s2_blindscan_data_t * pChannelList,
                                                                    sonysat_demod_dvbs_s2_blindscan_data_t * pBandList);

/**
 @brief Sort candidate list by symbol rate.

 @param pStorage Storage instance.
 @param pCandList Candidate list.
 @param baseSymbolRateKSps Sort base symbol rate in KSps.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_SortBySymbolrate (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                  sonysat_demod_dvbs_s2_blindscan_data_t * pCandList,
                                                                  uint32_t baseSymbolRateKSps);

/**
 @brief Sort candidate list by frequency.

 @param pStorage Storage instance.
 @param pCandList Candidate list.
 @param baseFrequencyKHz Sort base frequency in KHz.

 @return SONYSAT_RESULT_OK if successful.
*/
sonysat_result_t sonysat_demod_dvbs_s2_blindscan_algo_SortByFrequency (sonysat_demod_dvbs_s2_blindscan_data_storage_t * pStorage,
                                                                 sonysat_demod_dvbs_s2_blindscan_data_t * pCandList,
                                                                 uint32_t baseFrequencyKHz);

#endif /* SONYSAT_DEMOD_DVBS_S2_BLINDSCAN_ALGO_H */
