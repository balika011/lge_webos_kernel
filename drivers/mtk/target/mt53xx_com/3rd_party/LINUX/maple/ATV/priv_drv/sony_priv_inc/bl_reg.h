/* ========================================================================== */
/*                                                                            */
/*   bl_reg.h                                                               */
/*   (c) 2009 Author                                                          */
/*                                                                            */
/*   Description                                                              */
/*                                                                            */
/* ========================================================================== */

#ifndef _BL_REG_H_
#define _BL_REG_H_

enum{
    SREG_BL_DUMMY,
    /* Backlight Status */
    SREG_BL_TEMP_TGT,    
    SREG_BL_TEMP_CNT,
	SREG_EMG_MODE,
	SREG_NORMAL_BRIGHT_CONT,
	/* Backlight Config */
	SREG_BL_TOP,
	SREG_BL_BOTTOM,
	SREG_BL_MID,
	SREG_BL_MID_KNEE,
	SREG_BL_SETUDEN,
	SREG_BL_PSH,
	SREG_TEMP_TH_LOW,
	SREG_TEMP_TH_HIGH,
	SREG_TEMP_BL_BOTTOM,
	SREG_TEMP_BL_LIMIT,
	SREG_BL_TEMP_CNTTH,
	SREG_BL_TEMP_INC,
	SREG_BL_CRI_TEMP_L,
	SREG_BL_CRI_TEMP_H,
	SREG_DIMMER_DUTY,
	/* Opt Status */
	SREG_OPT_READ_DATA,
	SREG_OPT_BL_OUT_AVG,
	/* Opt Config */
	SREG_OPT_BL_REMOTE_ENABLE,
	SREG_OPT_BL_COUNT,
	SREG_OPT_BL_CUTMINMAX,
	/* PQC Status */
	SREG_OPT_BL_SENSOR,
    SREG_OPT_BL_COEF,
    SREG_DBC4PS_PIC_STHIS,
    SREG_LCD_BACKLIGHT_CONTROL,
    SREG_DYNAMIC_BACKLIGHT,
    SREG_OPT_BL_COEF_TGT,
    /* PQC Panel Config */
	SREG_BL_MANU_EN,
	SREG_BL_GAIN,
    SREG_BL_PWM_FRQ,
    SREG_BL_MAX_DUTY,
    SREG_BL_MIN_DUTY,
    SREG_DEEP_DIMMER_TH_EN,
    SREG_DEEP_DIMMER_TH_H,
    SREG_DEEP_DIMMER_TH_L,
    SREG_BL_AGING_GAIN,
    SREG_BL_NO_SIGNAL_GAIN, //Needed?
    SREG_BL_DIMMER_SEL,
    SREG_BL_REDUCTION,
    /* PQC Opt Config */    
    SREG_OPT_BL_DEADB,
    SREG_OPT_BL_TH0,
    SREG_OPT_BL_TH1,
    SREG_OPT_BL_TH2,
    SREG_OPT_BL_TH3,
    SREG_OPT_BL_END_TGT1,
    SREG_OPT_BL_END_TGT2,
    SREG_OPT_BL_END_TGT3,
    SREG_OPT_BL_IIR,
    /* PQC Opt Index */
    SREG_OPT_BL_INDEX,
    
    SREG_IIR_CLR_TIMES,
    SREG_DAPLM_TH1,
    SREG_DAPLM_TH2,
    SREG_DAPLM_TH3,
    SREG_DAPLM_TH4,
    SREG_DBC_APL_EN,
    SREG_DBC_APL_TH1,
    SREG_DBC_APL_TH2,
    SREG_DBC_APL_TH3,
    SREG_DBC_APL_TH4,
    SREG_DBC_APL_IIR_L,
    SREG_DBC_APL_IIR_M,
    SREG_DBC_APL_IIR_H,
    SREG_DBC_APL_BL_TLIM,
    SREG_DBC_APL_BL_BLIM,
    /* Dynamic Backlight Status */
    SREG_SCENE_CHANGE_DET,
    SREG_APL_LUMA,
    SREG_APL_DBC,
    SREG_DBC_APL,
    
    SREG_DBC_MAX_IIR,
    SREG_DBC_MAX_THR,
    SREG_DBC_MAX_THR1,
    SREG_DBC_MAX_THR2,
    SREG_DBC_MAX_EN,
    SREG_DBC_MAX,
    SREG_MAX_DBC,
    SREG_DBC_MAX_THR_I,

    SREG_FACT_BL_GAIN,
    
    SREG_OPT_BL_DEADB_CIN,     
    SREG_OPT_BL_TH0_CIN,      
    SREG_OPT_BL_TH1_CIN,      
    SREG_OPT_BL_TH2_CIN,   
    SREG_OPT_BL_TH3_CIN,  
    SREG_OPT_BL_END_TGT1_CIN,       
    SREG_OPT_BL_END_TGT2_CIN,      
    SREG_OPT_BL_END_TGT3_CIN,      
    SREG_OPT_BL_IIR_CIN,  
    /* DBC4PS */
    SREG_DBC4PS_PIC_EN,
    SREG_DBC4PS_BL_B_INC,
    SREG_DBC4PS_BL_B_DEC,
    SREG_DBC4PS_BL_CONT,
    SREG_DBC4PS_PIC_INT_1,
    SREG_DBC4PS_PIC_INT_2,
    SREG_CHIST,
    SREG_DBC4PS_PIC_STATE,
    SREG_LUMA_MAX,        
    SREG_DBC4PS_LUMAX_TH,     
    SREG_DBC4PS_LUMAX_TH_PC,  

    SREG_BL_CRI_ONOFF,
    SREG_BL_CRI_DUTY,
    SREG_BL_CRI_PWM_FRQ,
    SREG_BL_REDUCTION_TIME,
    
    SREG_BL_STATE,
    SREG_BL_24P_PWM_FRQ,
    SREG_DBC4PS_CON_TH,
    SREG_DBC4PS_COUNTER,
    
    SREG_CRI_BLOFF_WAIT,
    SREG_PANEL_TYPE,
    
	SREG_COUNT
};

enum{
    EEP_OFFSET_EMCS_NVM_CS = EEP_OFFSET_EMCS_BL_CTRL_AREA_START,
    
    EEP_OFFSET_EMCS_CRI_BLOFF_WAIT,
    EEP_OFFSET_EMCS_EMPTY_02,  
    EEP_OFFSET_EMCS_EMPTY_03,
    EEP_OFFSET_EMCS_EMPTY_04,
    EEP_OFFSET_EMCS_EMPTY_05,     
    EEP_OFFSET_EMCS_EMPTY_06,
    EEP_OFFSET_EMCS_EMPTY_07,
    EEP_OFFSET_EMCS_EMPTY_08,
    EEP_OFFSET_EMCS_EMPTY_09,
    EEP_OFFSET_EMCS_EMPTY_10,
    EEP_OFFSET_EMCS_EMPTY_11,
    EEP_OFFSET_EMCS_EMPTY_12,
    EEP_OFFSET_EMCS_EMPTY_13,
    EEP_OFFSET_EMCS_EMPTY_14,
    EEP_OFFSET_EMCS_BL_AGING_GAIN,
    EEP_OFFSET_EMCS_BL_MANU_EN,
    
    EEP_OFFSET_EMCS_DAPLM_TH1           = EEP_OFFSET_EMCS_BL_MANU_EN + 1,
    EEP_OFFSET_EMCS_DAPLM_TH2           = EEP_OFFSET_EMCS_DAPLM_TH1 + 2,
    EEP_OFFSET_EMCS_DAPLM_TH3           = EEP_OFFSET_EMCS_DAPLM_TH2 + 2,
    EEP_OFFSET_EMCS_DAPLM_TH4           = EEP_OFFSET_EMCS_DAPLM_TH3 + 2,
    EEP_OFFSET_EMCS_DBC_APL_EN          = EEP_OFFSET_EMCS_DAPLM_TH4 + 2,
    EEP_OFFSET_EMCS_DBC_APL_TH1         = EEP_OFFSET_EMCS_DBC_APL_EN + 1,
    EEP_OFFSET_EMCS_DBC_APL_TH2         = EEP_OFFSET_EMCS_DBC_APL_TH1 + 2,
    EEP_OFFSET_EMCS_DBC_APL_TH3         = EEP_OFFSET_EMCS_DBC_APL_TH2 + 2,
    EEP_OFFSET_EMCS_DBC_APL_TH4         = EEP_OFFSET_EMCS_DBC_APL_TH3 + 2,
    EEP_OFFSET_EMCS_DBC_APL_IIR_L       = EEP_OFFSET_EMCS_DBC_APL_TH4 + 2,
    EEP_OFFSET_EMCS_DBC_APL_IIR_M       = EEP_OFFSET_EMCS_DBC_APL_IIR_L + 1,
    EEP_OFFSET_EMCS_DBC_APL_IIR_H       = EEP_OFFSET_EMCS_DBC_APL_IIR_M + 1,
    EEP_OFFSET_EMCS_DBC_APL_BL_TLIM     = EEP_OFFSET_EMCS_DBC_APL_IIR_H + 1,
    EEP_OFFSET_EMCS_DBC_APL_BL_BLIM     = EEP_OFFSET_EMCS_DBC_APL_BL_TLIM + 1,
    EEP_OFFSET_EMCS_DBC_MAX_IIR         = EEP_OFFSET_EMCS_DBC_APL_BL_BLIM + 1,
    EEP_OFFSET_EMCS_DBC_MAX_THR         = EEP_OFFSET_EMCS_DBC_MAX_IIR + 1,
    EEP_OFFSET_EMCS_DBC_MAX_THR1        = EEP_OFFSET_EMCS_DBC_MAX_THR + 2,
    EEP_OFFSET_EMCS_DBC_MAX_THR2        = EEP_OFFSET_EMCS_DBC_MAX_THR1 + 2,
    EEP_OFFSET_EMCS_DBC_MAX_THR_I       = EEP_OFFSET_EMCS_DBC_MAX_THR2 + 2,
    
    EEP_OFFSET_EMCS_EMPTY_16,
    EEP_OFFSET_EMCS_OPT_BL_TH0,
    EEP_OFFSET_EMCS_OPT_BL_TH1,   
    EEP_OFFSET_EMCS_OPT_BL_TH2,
    EEP_OFFSET_EMCS_OPT_BL_TH3,
    EEP_OFFSET_EMCS_OPT_BL_END_TGT1,
    EEP_OFFSET_EMCS_OPT_BL_END_TGT2,
    EEP_OFFSET_EMCS_OPT_BL_END_TGT3,
    EEP_OFFSET_EMCS_OPT_BL_IIR,
    EEP_OFFSET_EMCS_EMPTY_17,
    EEP_OFFSET_EMCS_OPT_BL_TH0_C,
    EEP_OFFSET_EMCS_OPT_BL_TH1_C,
    EEP_OFFSET_EMCS_OPT_BL_TH2_C,
    EEP_OFFSET_EMCS_OPT_BL_TH3_C,
    EEP_OFFSET_EMCS_OPT_BL_END_TGT1_C,
    EEP_OFFSET_EMCS_OPT_BL_END_TGT2_C,
    EEP_OFFSET_EMCS_OPT_BL_END_TGT3_C,
    EEP_OFFSET_EMCS_OPT_BL_IIR_C,

    EEP_OFFSET_EMCS_DBC4PS_PIC_EN,
    EEP_OFFSET_EMCS_DBC4PS_BL_B_INC,
    EEP_OFFSET_EMCS_DBC4PS_BL_B_DEC,
    EEP_OFFSET_EMCS_DBC4PS_PIC_INT_1,
    EEP_OFFSET_EMCS_DBC4PS_PIC_INT_2,   
    EEP_OFFSET_EMCS_DBC4PS_LUMAX_TH,
    
    EEP_OFFSET_EMCS_EMPTY_18,
    EEP_OFFSET_EMCS_EMPTY_19,
    EEP_OFFSET_EMCS_EMPTY_20,
    
    EEP_OFFSET_EMCS_EMPTY_21,
    EEP_OFFSET_EMCS_EMPTY_22,
    
    EEP_OFFSET_EMCS_BL_REDUCTION_TIME,
    EEP_OFFSET_EMCS_BL_REDUCTION,
    
    EEP_OFFSET_EMCS_BL_NO_SIGNAL_GAIN,
    EEP_OFFSET_EMCS_FACT_BL_GAIN,
    EEP_OFFSET_EMCS_OPT_BL_COUNT,
    EEP_OFFSET_EMCS_OPT_BL_CUTMINMAX,
    EEP_OFFSET_EMCS_OPT_BL_REMOTE_EN,
    EEP_OFFSET_EMCS_DBC4PS_CON_TH,
    EEP_OFFSET_EMCS_DBC4PS_LUMAX_TH_PC = EEP_OFFSET_EMCS_DBC4PS_CON_TH + 2,
    
    EEP_OFFSET_EMCS_BL_CTRL_MAX_IDX = (EEP_OFFSET_EMCS_BL_CTRL_AREA_END)
};

extern UINT16 bl_sreg_read(UINT16 sreg);
extern void bl_sreg_write(UINT16 sreg, UINT16 value);
extern void set_initial_sreg(void);
extern void sreg_write_from_flash(void);

#endif  /* _BL_REG_H_ */
