#ifndef _RGB_REG_H_
#define _RGB_REG_H_

#include "acfg_atv_eep.h"

enum {

  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE8   = (EEP_OFFSET_EMCS_RGB_AREA_START),             /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE8       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE8 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE8       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE8 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE8     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE8 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE8     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE8 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE8     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE8 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE8     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE8 + 1),      /* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE7   = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE8 + 1),      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE7       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE7 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE7       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE7 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE7     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE7 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE7     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE7 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE7     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE7 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE7     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE7 + 1),      /* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE6   = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE7 + 1),      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE6       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE6 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE6       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE6 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE6     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE6 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE6     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE6 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE6     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE6 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE6     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE6 + 1),      /* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE5   = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE6 + 1),      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE5       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE5 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE5       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE5 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE5     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE5 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE5     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE5 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE5     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE5 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE5     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE5 + 1),      /* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE4   = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE5 + 1),      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE4       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE4 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE4       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE4 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE4     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE4 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE4     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE4 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE4     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE4 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE4     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE4 + 1),      /* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE3   = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE4 + 1),      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE3       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE3 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE3       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE3 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE3     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE3 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE3     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE3 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE3     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE3 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE3     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE3 + 1),      /* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE2   = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE3 + 1),      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE2       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE2 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE2       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE2 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE2     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE2 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE2     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE2 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE2     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE2 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE2     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE2 + 1),      /* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE1   = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE2 + 1),      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX11_CASE1       = (EEP_OFFSET_EMCS_RGB_MANU_TIME_CASE1 + 2),    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX12_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX11_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX13_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX12_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX14_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX13_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX21_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX14_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX22_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX21_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX23_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX22_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX24_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX23_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX31_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX24_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX32_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX31_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX33_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX32_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_MTX34_CASE1       = (EEP_OFFSET_EMCS_RGB_MTX33_CASE1 + 2),        /* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE1     = (EEP_OFFSET_EMCS_RGB_MTX34_CASE1 + 2),        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OFST_BL_CASE1     = (EEP_OFFSET_EMCS_RGB_GAIN_BL_CASE1 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE1     = (EEP_OFFSET_EMCS_RGB_OFST_BL_CASE1 + 1),      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_THRE_IR_CASE1     = (EEP_OFFSET_EMCS_RGB_SUM_CNT_CASE1 + 1),      /* 1 byte */

  EEP_OFFSET_EMCS_RGB_GAISOU_ECS      = (EEP_OFFSET_EMCS_RGB_THRE_IR_CASE1 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_CHECKSUM        = (EEP_OFFSET_EMCS_RGB_GAISOU_ECS + 1),/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED01      = (EEP_OFFSET_EMCS_RGB_CHECKSUM + 1),       /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED02      = (EEP_OFFSET_EMCS_RGB_RESERVED01 + 1),     /* 1 byte */
  EEP_OFFSET_EMCS_RGB_INT_R           = (EEP_OFFSET_EMCS_RGB_RESERVED02 + 1),     /* 2 byte */
  EEP_OFFSET_EMCS_RGB_INT_G           = (EEP_OFFSET_EMCS_RGB_INT_R + 2),          /* 2 byte */
  EEP_OFFSET_EMCS_RGB_INT_B           = (EEP_OFFSET_EMCS_RGB_INT_G + 2),          /* 2 byte */
  EEP_OFFSET_EMCS_RGB_INT_IR          = (EEP_OFFSET_EMCS_RGB_INT_B + 2),          /* 2 byte */  
  EEP_OFFSET_EMCS_RGB_COEF_GAIN_R     = (EEP_OFFSET_EMCS_RGB_INT_IR + 2),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_COEF_OFST_R     = (EEP_OFFSET_EMCS_RGB_COEF_GAIN_R  + 1),	  /* 2 byte */
  EEP_OFFSET_EMCS_RGB_COEF_GAIN_G     = (EEP_OFFSET_EMCS_RGB_COEF_OFST_R  + 2),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_COEF_OFST_G     = (EEP_OFFSET_EMCS_RGB_COEF_GAIN_G  + 1),	  /* 2 byte */
  EEP_OFFSET_EMCS_RGB_COEF_GAIN_B     = (EEP_OFFSET_EMCS_RGB_COEF_OFST_G + 2),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_COEF_OFST_B     = (EEP_OFFSET_EMCS_RGB_COEF_GAIN_B  + 1),	  /* 2 byte */
  EEP_OFFSET_EMCS_RGB_COEF_GAIN_IR    = (EEP_OFFSET_EMCS_RGB_COEF_OFST_B + 2),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_COEF_OFST_IR    = (EEP_OFFSET_EMCS_RGB_COEF_GAIN_IR  + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_GAIN_SET        = (EEP_OFFSET_EMCS_RGB_COEF_OFST_IR + 2),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_INT_TIME        = (EEP_OFFSET_EMCS_RGB_GAIN_SET + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED03      = (EEP_OFFSET_EMCS_RGB_INT_TIME + 1),	      /* 2 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED04      = (EEP_OFFSET_EMCS_RGB_RESERVED03 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED05      = (EEP_OFFSET_EMCS_RGB_RESERVED04 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED06      = (EEP_OFFSET_EMCS_RGB_RESERVED05 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED07      = (EEP_OFFSET_EMCS_RGB_RESERVED06 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED08      = (EEP_OFFSET_EMCS_RGB_RESERVED07 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED09      = (EEP_OFFSET_EMCS_RGB_RESERVED08 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED10      = (EEP_OFFSET_EMCS_RGB_RESERVED09 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED11      = (EEP_OFFSET_EMCS_RGB_RESERVED10 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED12      = (EEP_OFFSET_EMCS_RGB_RESERVED11 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED13      = (EEP_OFFSET_EMCS_RGB_RESERVED12 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED14      = (EEP_OFFSET_EMCS_RGB_RESERVED13 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED15      = (EEP_OFFSET_EMCS_RGB_RESERVED14 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED16      = (EEP_OFFSET_EMCS_RGB_RESERVED15 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED17      = (EEP_OFFSET_EMCS_RGB_RESERVED16 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED18      = (EEP_OFFSET_EMCS_RGB_RESERVED17 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED19      = (EEP_OFFSET_EMCS_RGB_RESERVED18 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED20      = (EEP_OFFSET_EMCS_RGB_RESERVED19 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED21      = (EEP_OFFSET_EMCS_RGB_RESERVED20 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED22      = (EEP_OFFSET_EMCS_RGB_RESERVED21 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED23      = (EEP_OFFSET_EMCS_RGB_RESERVED22 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED24      = (EEP_OFFSET_EMCS_RGB_RESERVED23 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED25      = (EEP_OFFSET_EMCS_RGB_RESERVED24 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED26      = (EEP_OFFSET_EMCS_RGB_RESERVED25 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED27      = (EEP_OFFSET_EMCS_RGB_RESERVED26 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED28      = (EEP_OFFSET_EMCS_RGB_RESERVED27 + 1),  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT_THRE_H      = (EEP_OFFSET_EMCS_RGB_RESERVED28 + 1),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_OPT_THRE_L      = (EEP_OFFSET_EMCS_RGB_OPT_THRE_H + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_ON              = (EEP_OFFSET_EMCS_RGB_OPT_THRE_L + 2),	    /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A1          = (EEP_OFFSET_EMCS_RGB_ON + 1),	            /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A2          = (EEP_OFFSET_EMCS_RGB_IIR_A1 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A3          = (EEP_OFFSET_EMCS_RGB_IIR_A2 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A4          = (EEP_OFFSET_EMCS_RGB_IIR_A3 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A5          = (EEP_OFFSET_EMCS_RGB_IIR_A4 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A6          = (EEP_OFFSET_EMCS_RGB_IIR_A5 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A7          = (EEP_OFFSET_EMCS_RGB_IIR_A6 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A8          = (EEP_OFFSET_EMCS_RGB_IIR_A7 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_B0          = (EEP_OFFSET_EMCS_RGB_IIR_A8 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A11         = (EEP_OFFSET_EMCS_RGB_IIR_B0 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A12         = (EEP_OFFSET_EMCS_RGB_IIR_A11 + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A13         = (EEP_OFFSET_EMCS_RGB_IIR_A12 + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A14         = (EEP_OFFSET_EMCS_RGB_IIR_A13 + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A15         = (EEP_OFFSET_EMCS_RGB_IIR_A14 + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A16         = (EEP_OFFSET_EMCS_RGB_IIR_A15 + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A17         = (EEP_OFFSET_EMCS_RGB_IIR_A16 + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_A18         = (EEP_OFFSET_EMCS_RGB_IIR_A17 + 1),	      /* 1 byte */
  EEP_OFFSET_EMCS_RGB_IIR_B1          = (EEP_OFFSET_EMCS_RGB_IIR_A18 + 1),	      /* 1 byte */  
  EEP_OFFSET_EMCS_RGB_RESERVED29      = (EEP_OFFSET_EMCS_RGB_IIR_B1 + 1),	        /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RESERVED30      = (EEP_OFFSET_EMCS_RGB_RESERVED29 + 1),	      /* 1 byte */
		
  EEP_OFFSET_EMCS_RGB_TR1_R_COOL      = (EEP_OFFSET_EMCS_RGB_RESERVED30 + 1),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_R_COOL      = (EEP_OFFSET_EMCS_RGB_TR1_R_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_R_COOL      = (EEP_OFFSET_EMCS_RGB_TR2_R_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_G_COOL      = (EEP_OFFSET_EMCS_RGB_TR3_R_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_G_COOL      = (EEP_OFFSET_EMCS_RGB_TR1_G_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_G_COOL      = (EEP_OFFSET_EMCS_RGB_TR2_G_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_B_COOL      = (EEP_OFFSET_EMCS_RGB_TR3_G_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_B_COOL      = (EEP_OFFSET_EMCS_RGB_TR1_B_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_B_COOL      = (EEP_OFFSET_EMCS_RGB_TR2_B_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_R_COOL     = (EEP_OFFSET_EMCS_RGB_TR3_B_COOL + 2),	    /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_R_COOL     = (EEP_OFFSET_EMCS_RGB_RGB1_R_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_R_COOL     = (EEP_OFFSET_EMCS_RGB_RGB2_R_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_G_COOL     = (EEP_OFFSET_EMCS_RGB_RGB3_R_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_G_COOL     = (EEP_OFFSET_EMCS_RGB_RGB1_G_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_G_COOL     = (EEP_OFFSET_EMCS_RGB_RGB2_G_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_B_COOL     = (EEP_OFFSET_EMCS_RGB_RGB3_G_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_B_COOL     = (EEP_OFFSET_EMCS_RGB_RGB1_B_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_B_COOL     = (EEP_OFFSET_EMCS_RGB_RGB2_B_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_TO1_R_COOL      = (EEP_OFFSET_EMCS_RGB_RGB3_B_COOL + 1),	  /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_R_COOL      = (EEP_OFFSET_EMCS_RGB_TO1_R_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_R_COOL      = (EEP_OFFSET_EMCS_RGB_TO2_R_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_G_COOL      = (EEP_OFFSET_EMCS_RGB_TO3_R_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_G_COOL      = (EEP_OFFSET_EMCS_RGB_TO1_G_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_G_COOL      = (EEP_OFFSET_EMCS_RGB_TO2_G_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_B_COOL      = (EEP_OFFSET_EMCS_RGB_TO3_G_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_B_COOL      = (EEP_OFFSET_EMCS_RGB_TO1_B_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_B_COOL      = (EEP_OFFSET_EMCS_RGB_TO2_B_COOL + 2),	    /* 2 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_R_COOL     = (EEP_OFFSET_EMCS_RGB_TO3_B_COOL + 2),	    /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_R_COOL     = (EEP_OFFSET_EMCS_RGB_OPT1_R_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_R_COOL     = (EEP_OFFSET_EMCS_RGB_OPT2_R_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_G_COOL     = (EEP_OFFSET_EMCS_RGB_OPT3_R_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_G_COOL     = (EEP_OFFSET_EMCS_RGB_OPT1_G_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_G_COOL     = (EEP_OFFSET_EMCS_RGB_OPT2_G_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_B_COOL     = (EEP_OFFSET_EMCS_RGB_OPT3_G_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_B_COOL     = (EEP_OFFSET_EMCS_RGB_OPT1_B_COOL + 1),	  /* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_B_COOL     = (EEP_OFFSET_EMCS_RGB_OPT2_B_COOL + 1),	  /* 1 byte */
  		
  EEP_OFFSET_EMCS_RGB_TR1_R_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_OPT3_B_COOL   + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_R_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR1_R_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_R_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR2_R_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_G_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR3_R_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_G_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR1_G_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_G_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR2_G_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_B_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR3_G_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_B_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR1_B_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_B_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TR2_B_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_R_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_TR3_B_NEUTRAL + 2),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_R_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB1_R_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_R_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB2_R_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_G_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB3_R_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_G_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB1_G_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_G_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB2_G_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_B_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB3_G_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_B_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB1_B_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_B_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_RGB2_B_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_TO1_R_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_RGB3_B_NEUTRAL + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_R_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO1_R_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_R_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO2_R_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_G_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO3_R_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_G_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO1_G_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_G_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO2_G_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_B_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO3_G_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_B_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO1_B_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_B_NEUTRAL   = (EEP_OFFSET_EMCS_RGB_TO2_B_NEUTRAL + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_R_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_TO3_B_NEUTRAL + 2),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_R_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT1_R_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_R_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT2_R_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_G_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT3_R_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_G_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT1_G_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_G_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT2_G_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_B_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT3_G_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_B_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT1_B_NEUTRAL + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_B_NEUTRAL  = (EEP_OFFSET_EMCS_RGB_OPT2_B_NEUTRAL + 1),	/* 1 byte */
  		
  EEP_OFFSET_EMCS_RGB_TR1_R_WARM1     = (EEP_OFFSET_EMCS_RGB_OPT3_B_NEUTRAL + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_R_WARM1     = (EEP_OFFSET_EMCS_RGB_TR1_R_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_R_WARM1     = (EEP_OFFSET_EMCS_RGB_TR2_R_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_G_WARM1     = (EEP_OFFSET_EMCS_RGB_TR3_R_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_G_WARM1     = (EEP_OFFSET_EMCS_RGB_TR1_G_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_G_WARM1     = (EEP_OFFSET_EMCS_RGB_TR2_G_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_B_WARM1     = (EEP_OFFSET_EMCS_RGB_TR3_G_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_B_WARM1     = (EEP_OFFSET_EMCS_RGB_TR1_B_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_B_WARM1     = (EEP_OFFSET_EMCS_RGB_TR2_B_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_R_WARM1    = (EEP_OFFSET_EMCS_RGB_TR3_B_WARM1 + 2),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_R_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB1_R_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_R_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB2_R_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_G_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB3_R_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_G_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB1_G_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_G_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB2_G_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_B_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB3_G_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_B_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB1_B_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_B_WARM1    = (EEP_OFFSET_EMCS_RGB_RGB2_B_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_TO1_R_WARM1     = (EEP_OFFSET_EMCS_RGB_RGB3_B_WARM1 + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_R_WARM1     = (EEP_OFFSET_EMCS_RGB_TO1_R_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_R_WARM1     = (EEP_OFFSET_EMCS_RGB_TO2_R_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_G_WARM1     = (EEP_OFFSET_EMCS_RGB_TO3_R_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_G_WARM1     = (EEP_OFFSET_EMCS_RGB_TO1_G_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_G_WARM1     = (EEP_OFFSET_EMCS_RGB_TO2_G_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_B_WARM1     = (EEP_OFFSET_EMCS_RGB_TO3_G_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_B_WARM1     = (EEP_OFFSET_EMCS_RGB_TO1_B_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_B_WARM1     = (EEP_OFFSET_EMCS_RGB_TO2_B_WARM1 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_R_WARM1    = (EEP_OFFSET_EMCS_RGB_TO3_B_WARM1 + 2),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_R_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT1_R_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_R_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT2_R_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_G_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT3_R_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_G_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT1_G_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_G_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT2_G_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_B_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT3_G_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_B_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT1_B_WARM1 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_B_WARM1    = (EEP_OFFSET_EMCS_RGB_OPT2_B_WARM1 + 1),	/* 1 byte */
  		
  EEP_OFFSET_EMCS_RGB_TR1_R_WARM2     = (EEP_OFFSET_EMCS_RGB_OPT3_B_WARM1 + 1),	/* 2 byte */	 
  EEP_OFFSET_EMCS_RGB_TR2_R_WARM2     = (EEP_OFFSET_EMCS_RGB_TR1_R_WARM2 + 2),	/* 2 byte */	 
  EEP_OFFSET_EMCS_RGB_TR3_R_WARM2     = (EEP_OFFSET_EMCS_RGB_TR2_R_WARM2 + 2),	/* 2 byte */	
  EEP_OFFSET_EMCS_RGB_TR1_G_WARM2     = (EEP_OFFSET_EMCS_RGB_TR3_R_WARM2 + 2),	/* 2 byte */	 
  EEP_OFFSET_EMCS_RGB_TR2_G_WARM2     = (EEP_OFFSET_EMCS_RGB_TR1_G_WARM2 + 2),	/* 2 byte */	
  EEP_OFFSET_EMCS_RGB_TR3_G_WARM2     = (EEP_OFFSET_EMCS_RGB_TR2_G_WARM2 + 2),	/* 2 byte */	 
  EEP_OFFSET_EMCS_RGB_TR1_B_WARM2     = (EEP_OFFSET_EMCS_RGB_TR3_G_WARM2 + 2),	/* 2 byte */	
  EEP_OFFSET_EMCS_RGB_TR2_B_WARM2     = (EEP_OFFSET_EMCS_RGB_TR1_B_WARM2 + 2),	/* 2 byte */	
  EEP_OFFSET_EMCS_RGB_TR3_B_WARM2     = (EEP_OFFSET_EMCS_RGB_TR2_B_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_R_WARM2    = (EEP_OFFSET_EMCS_RGB_TR3_B_WARM2 + 2),	/* 1 byte */	 
  EEP_OFFSET_EMCS_RGB_RGB2_R_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB1_R_WARM2 + 1),	/* 1 byte */	
  EEP_OFFSET_EMCS_RGB_RGB3_R_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB2_R_WARM2 + 1),	/* 1 byte */	
  EEP_OFFSET_EMCS_RGB_RGB1_G_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB3_R_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_G_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB1_G_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_G_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB2_G_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_B_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB3_G_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_B_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB1_B_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_B_WARM2    = (EEP_OFFSET_EMCS_RGB_RGB2_B_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_TO1_R_WARM2     = (EEP_OFFSET_EMCS_RGB_RGB3_B_WARM2 + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_R_WARM2     = (EEP_OFFSET_EMCS_RGB_TO1_R_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_R_WARM2     = (EEP_OFFSET_EMCS_RGB_TO2_R_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_G_WARM2     = (EEP_OFFSET_EMCS_RGB_TO3_R_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_G_WARM2     = (EEP_OFFSET_EMCS_RGB_TO1_G_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_G_WARM2     = (EEP_OFFSET_EMCS_RGB_TO2_G_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_B_WARM2     = (EEP_OFFSET_EMCS_RGB_TO3_G_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_B_WARM2     = (EEP_OFFSET_EMCS_RGB_TO1_B_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_B_WARM2     = (EEP_OFFSET_EMCS_RGB_TO2_B_WARM2 + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_R_WARM2    = (EEP_OFFSET_EMCS_RGB_TO3_B_WARM2 + 2),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_R_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT1_R_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_R_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT2_R_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_G_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT3_R_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_G_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT1_G_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_G_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT2_G_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_B_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT3_G_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_B_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT1_B_WARM2 + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_B_WARM2    = (EEP_OFFSET_EMCS_RGB_OPT2_B_WARM2 + 1),	/* 1 byte */
  		
  EEP_OFFSET_EMCS_RGB_TR1_R_PHOTO     = (EEP_OFFSET_EMCS_RGB_OPT3_B_WARM2 + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_R_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR1_R_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_R_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR2_R_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_G_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR3_R_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR2_G_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR1_G_PHOTO + 2),	/* 2 byte */ 
  EEP_OFFSET_EMCS_RGB_TR3_G_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR2_G_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR1_B_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR3_G_PHOTO + 2),	/* 2 byte */ 
  EEP_OFFSET_EMCS_RGB_TR2_B_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR1_B_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TR3_B_PHOTO     = (EEP_OFFSET_EMCS_RGB_TR2_B_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_R_PHOTO    = (EEP_OFFSET_EMCS_RGB_TR3_B_PHOTO + 2),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_R_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB1_R_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_R_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB2_R_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_G_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB3_R_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_G_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB1_G_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_G_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB2_G_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB1_B_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB3_G_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB2_B_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB1_B_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_RGB3_B_PHOTO    = (EEP_OFFSET_EMCS_RGB_RGB2_B_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_TO1_R_PHOTO     = (EEP_OFFSET_EMCS_RGB_RGB3_B_PHOTO + 1),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_R_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO1_R_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_R_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO2_R_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_G_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO3_R_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_G_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO1_G_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO3_G_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO2_G_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO1_B_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO3_G_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_TO2_B_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO1_B_PHOTO + 2),	/* 2 byte */ 
  EEP_OFFSET_EMCS_RGB_TO3_B_PHOTO     = (EEP_OFFSET_EMCS_RGB_TO2_B_PHOTO + 2),	/* 2 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_R_PHOTO    = (EEP_OFFSET_EMCS_RGB_TO3_B_PHOTO + 2),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_R_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT1_R_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_R_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT2_R_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_G_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT3_R_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_G_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT1_G_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_G_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT2_G_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT1_B_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT3_G_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT2_B_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT1_B_PHOTO + 1),	/* 1 byte */
  EEP_OFFSET_EMCS_RGB_OPT3_B_PHOTO    = (EEP_OFFSET_EMCS_RGB_OPT2_B_PHOTO + 1),	/* 1 byte */
  
  EEP_OFFSET_EMCS_RGB_MAX_IDX = (EEP_OFFSET_EMCS_RGB_AREA_END)
};

enum {
  SREG_RGB_SENS_K,
  SREG_RGB_SENS_R,
  SREG_RGB_SENS_G,
  SREG_RGB_SENS_B,
  SREG_RGB_SENS_IR,
  SREG_RGB_SENS_PLOT_X,
  SREG_RGB_SENS_PLOT_Y,
  SREG_RGB_SENS_T,
  SREG_RGB_SENS_Y,
  SREG_RGB_SENS_GAIN_R,
  SREG_RGB_SENS_GAIN_G,
  SREG_RGB_SENS_GAIN_B,  
  SREG_RGB_SENS_CNT_R,
  SREG_RGB_SENS_CNT_G,
  SREG_RGB_SENS_CNT_B,
  SREG_RGB_SENS_CNT_IR,
  SREG_RGB_SENS_SUM_R,
  SREG_RGB_SENS_SUM_G,
  SREG_RGB_SENS_SUM_B,
  SREG_RGB_SENS_SUM_IR,  
  SREG_RGB_SENS_INT_R,
  SREG_RGB_SENS_INT_G,
  SREG_RGB_SENS_INT_B,
  SREG_RGB_SENS_INT_IR,   
  SREG_RGB_SENS_COEF_GAIN_R,
  SREG_RGB_SENS_COEF_OFST_R,
  SREG_RGB_SENS_COEF_GAIN_G,
  SREG_RGB_SENS_COEF_OFST_G,
  SREG_RGB_SENS_COEF_GAIN_B,
  SREG_RGB_SENS_COEF_OFST_B,
  SREG_RGB_SENS_COEF_GAIN_IR,
  SREG_RGB_SENS_COEF_OFST_IR,
  SREG_RGB_SENS_GAIN_SET,
  SREG_RGB_SENS_INT_TIME,
  SREG_RGB_SENS_OPT_THRE_H,
  SREG_RGB_SENS_OPT_THRE_L,
  SREG_RGB_SENS_ON,
  SREG_RGB_SENS_IIR_A1,
  SREG_RGB_SENS_IIR_A2,
  SREG_RGB_SENS_IIR_A3,
  SREG_RGB_SENS_IIR_A4,
  SREG_RGB_SENS_IIR_A5,
  SREG_RGB_SENS_IIR_A6,
  SREG_RGB_SENS_IIR_A7,
  SREG_RGB_SENS_IIR_A8,
  SREG_RGB_SENS_IIR_B0,
  SREG_RGB_SENS_IIR_A11,
  SREG_RGB_SENS_IIR_A12,
  SREG_RGB_SENS_IIR_A13,
  SREG_RGB_SENS_IIR_A14,
  SREG_RGB_SENS_IIR_A15,
  SREG_RGB_SENS_IIR_A16,
  SREG_RGB_SENS_IIR_A17,
  SREG_RGB_SENS_IIR_A18,
  SREG_RGB_SENS_IIR_B1,
  SREG_RGB_SENS_IIR_RESET,

  SREG_RGB_SENS_TR1_R,
  SREG_RGB_SENS_TR2_R,
  SREG_RGB_SENS_TR3_R,
  SREG_RGB_SENS_TR1_G,
  SREG_RGB_SENS_TR2_G,
  SREG_RGB_SENS_TR3_G,
  SREG_RGB_SENS_TR1_B,
  SREG_RGB_SENS_TR2_B,
  SREG_RGB_SENS_TR3_B,
  SREG_RGB_SENS_RGB1_R,
  SREG_RGB_SENS_RGB2_R,
  SREG_RGB_SENS_RGB3_R,
  SREG_RGB_SENS_RGB1_G,
  SREG_RGB_SENS_RGB2_G,
  SREG_RGB_SENS_RGB3_G,
  SREG_RGB_SENS_RGB1_B,
  SREG_RGB_SENS_RGB2_B,
  SREG_RGB_SENS_RGB3_B,
  SREG_RGB_SENS_TO1_R,
  SREG_RGB_SENS_TO2_R,
  SREG_RGB_SENS_TO3_R,
  SREG_RGB_SENS_TO1_G,
  SREG_RGB_SENS_TO2_G,
  SREG_RGB_SENS_TO3_G,
  SREG_RGB_SENS_TO1_B,
  SREG_RGB_SENS_TO2_B,
  SREG_RGB_SENS_TO3_B,
  SREG_RGB_SENS_OPT1_R,
  SREG_RGB_SENS_OPT2_R,
  SREG_RGB_SENS_OPT3_R,
  SREG_RGB_SENS_OPT1_G,
  SREG_RGB_SENS_OPT2_G,
  SREG_RGB_SENS_OPT3_G,
  SREG_RGB_SENS_OPT1_B,
  SREG_RGB_SENS_OPT2_B,
  SREG_RGB_SENS_OPT3_B,
  
  SREG_RGB_SENS_MANU_TIME,
  SREG_RGB_SENS_MTX_11,
  SREG_RGB_SENS_MTX_12,
  SREG_RGB_SENS_MTX_13,
  SREG_RGB_SENS_MTX_14,
  SREG_RGB_SENS_MTX_21,
  SREG_RGB_SENS_MTX_22,
  SREG_RGB_SENS_MTX_23,
  SREG_RGB_SENS_MTX_24,
  SREG_RGB_SENS_MTX_31,
  SREG_RGB_SENS_MTX_32,
  SREG_RGB_SENS_MTX_33,
  SREG_RGB_SENS_MTX_34,
  SREG_RGB_SENS_GAIN_BL,
  SREG_RGB_SENS_OFST_BL,
  SREG_RGB_SENS_SUM_CNT,
  SREG_RGB_SENS_THRE_IR,
  
  MAX_RGB_SREG
};

typedef struct{
  UINT8 gain_r;
  UINT8 gain_g;
  UINT8 gain_b;
}RGB_GAIN_DATA;

extern UINT16 RGB_GetOptReadData(void);

extern void RGB_GetRGBGainData(RGB_GAIN_DATA* gain_ptr);

#endif
