/********************************************************************************************
 *     LEGAL DISCLAIMER
 *
 *     (Header of MediaTek Software/Firmware Release or Documentation)
 *
 *     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 *     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED
 *     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS
 *     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED,
 *     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 *     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY
 *     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 *     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK
 *     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
 *     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION
 *     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
 *
 *     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH
 *     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION,
 *     TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE
 *     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 *     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS
 *     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.
 ************************************************************************************************/

#ifndef _DRV_FS_CMD_H_
#define _DRV_FS_CMD_H_

#include "vdec_vfy_debug.h"

#define DRV_FS_RDONLY 0
#define DRV_FS_W_C 1
#define DRV_FS_RW_C 2

#define MAX_FILENAME_SZ 50
#define MAX_READ_BYTES  32*1024

#define DRV_FSR_SUCCESS 0
#define DRV_FSR_FAIL    -1
#define DRV_FSR_NULL_POINT            -2
#define DRV_FSR_BUF_ADDR_ALIGN_ERR    -3
#define DRV_FSR_ONLY_SUPPORT_RDONLY   -4
#define DRV_FSR_PARAMETER_ERR         -5

extern INT32 DrvFSUSBMount(UINT32 dwDriveNo,UINT32 *pu4DrvFSTag);
extern INT32 DrvFSUSBUnMount(void);
extern INT32 DrvFSMount(UINT32 dwDriveNo,UINT32 *pu4DrvFSTag);
extern INT32 DrvFSUnMount(void);
extern INT32 DrvFSOpenFile(char* pcDirFileName,UINT32 dwFlags, INT32* piFd);
extern INT32 DrvFSGetFileSize(INT32 iFd, UINT32 *pu4FileSize);
extern INT32 DrvFSSeekFile(INT32 iFd, INT64 iOffset, INT32 iOrigin);
extern INT32 DrvFSReadFile(INT32 iFd, void* pbBuf, UINT32 u4Count);
extern INT32 DrvFSWriteFile(INT32 iFd, const void *pbBuf, DWRD dwSize);
extern INT32 DrvFSCloseFile(INT32 iFd);
extern INT32 DrvFSMkDir(const char *pFolder, INT32 i4Mode);
extern INT32 DrvFSRmDir(const char *pFolder);
extern INT32 DrvFSSyncFile(void);
extern INT32 DrvFSRmFile(const char *pFolder);

extern INT32 DrvFSUSBOpenFile(char* pcDirFileName,UINT32 dwFlags, INT32* piFd);
extern INT32 DrvFSUSBGetFileSize(INT32 iFd, UINT32 *pu4FileSize);
extern INT32 DrvFSUSBSeekFile(INT32 iFd, INT64 iOffset, INT32 iOrigin);
extern INT32 DrvFSUSBReadFile(INT32 iFd, void* pbBuf, UINT32 u4Count);
extern INT32 DrvFSUSBWriteFile(INT32 iFd, const void *pbBuf, DWRD dwSize);
extern INT32 DrvFSUSBCloseFile(INT32 iFd);
#endif /* #ifndef _DRV_FS_CMD_H_ */

